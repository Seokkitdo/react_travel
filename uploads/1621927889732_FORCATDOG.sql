-- SYSTEM
--CREATE USER FORCATDOG IDENTIFIED BY FORCATDOG;
--GRANT RESOURCE, CONNECT TO FORCATDOG;
--GRANT CREATE VIEW TO FORCATDOG;

-- DROP -- CASCADE 사용시 외래키가 풀릴 수 있음
DROP TABLE PETINFO_FILE;
DROP SEQUENCE SEQ_PETCOUNT;
DROP TABLE PETINFO;
DROP TABLE LICENSE_QUIZ_ANS;
DROP SEQUENCE SEQ_LQCOUNT;
DROP TABLE LICENSE_QUIZ;
DROP SEQUENCE SEQ_PFCOUNT;
DROP TABLE PRODUCT_FILE;
DROP SEQUENCE SEQ_PCOUNT;
DROP TABLE PRODUCT;
DROP SEQUENCE SEQ_MECOUNT;
DROP TABLE MESSAGE;
DROP SEQUENCE SEQ_RCOUNT;
DROP TABLE REPORT;
DROP TABLE MATCH_PET;
DROP TABLE MYPET_FILE;
DROP SEQUENCE SEQ_MPETCOUNT;
DROP TABLE MYPET;
DROP SEQUENCE SEQ_MCOUNT;
DROP TABLE MATCH;
DROP SEQUENCE SEQ_QBCOUNT;
DROP TABLE QNA_BOARD;
DROP SEQUENCE SEQ_NBCOUNT;
DROP TABLE NOTICE_BOARD;
DROP SEQUENCE SEQ_BCGOUNT;
DROP SEQUENCE SEQ_BCCOUNT;
DROP TABLE BOARD_COMMENT;
DROP SEQUENCE SEQ_BFCOUNT;
DROP TABLE BOARD_FILE;
DROP SEQUENCE SEQ_BGCOUNT;
DROP SEQUENCE SEQ_BCOUNT;
DROP TABLE BOARD;
DROP TABLE MEMBER_PROFILE;
DROP TABLE MEMBER;
DROP SEQUENCE SEQ_PWCOUNT;
DROP TABLE PW_HINT;
DROP TABLE OPERATION_GUIDE;
--DROP TABLE LOCATION;

-- FORCATDOG
CREATE TABLE PW_HINT(
    PW_HINT_NUM NUMBER PRIMARY KEY,
    PW_HINT VARCHAR2(255) NOT NULL
);

CREATE SEQUENCE SEQ_PWCOUNT NOCACHE;

INSERT INTO PW_HINT VALUES(SEQ_PWCOUNT.NEXTVAL, '내가 태어난 곳은?');
INSERT INTO PW_HINT VALUES(SEQ_PWCOUNT.NEXTVAL, '나에게 가장 소중한 것은?');
INSERT INTO PW_HINT VALUES(SEQ_PWCOUNT.NEXTVAL, '내 반려동물 이름은?');
INSERT INTO PW_HINT VALUES(SEQ_PWCOUNT.NEXTVAL, '내가 나온 초등학교 이름은?');
INSERT INTO PW_HINT VALUES(SEQ_PWCOUNT.NEXTVAL, '나의 어머니 성함은?');
INSERT INTO PW_HINT VALUES(SEQ_PWCOUNT.NEXTVAL, '나의 아버지 성함은?');
commit;

CREATE TABLE MEMBER(
    MEMBER_ID VARCHAR2(20) PRIMARY KEY,
    MEMBER_PW VARCHAR2(255) NOT NULL,
    GENDER VARCHAR2(1) NOT NULL,
    NAME VARCHAR2(20) NOT NULL,
    NICKNAME VARCHAR2(20) NOT NULL,
    EMAIL VARCHAR2(30) NOT NULL,
    PHONE VARCHAR2(20) NOT NULL,
    BIRTH DATE NOT NULL,
    PW_HINT_NUM NUMBER NOT NULL,
    PW_ANS VARCHAR2(255) NOT NULL,
    ADMIN_Q VARCHAR2(1) DEFAULT 'N' NOT NULL,
    PET_Q VARCHAR2(1) DEFAULT 'N' NOT NULL,
    SIDO_NAME VARCHAR2(255) NOT NULL,
    SIGUNGU_NAME VARCHAR2(255) NOT NULL,
    DONG_NAME VARCHAR2(255) NOT NULL,
    ENROLL_DATE DATE DEFAULT SYSDATE NOT NULL,
    UPDATE_DATE DATE DEFAULT SYSDATE NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

ALTER TABLE MEMBER ADD CONSTRAINT M_PH_FK FOREIGN KEY(PW_HINT_NUM) REFERENCES PW_HINT;
ALTER TABLE MEMBER ADD CONSTRAINT M_LOCATION_FK FOREIGN KEY(SIDO_NAME, SIGUNGU_NAME, DONG_NAME) REFERENCES LOCATION;
ALTER TABLE MEMBER ADD CONSTRAINT M_GENDER_CK CHECK(GENDER IN('M', 'F'));
ALTER TABLE MEMBER ADD CONSTRAINT M_AQ_CK CHECK(ADMIN_Q IN('Y', 'N'));
ALTER TABLE MEMBER ADD CONSTRAINT M_PQ_CK CHECK(PET_Q IN('Y', 'N'));

CREATE TABLE MEMBER_PROFILE(
    MEMBER_ID VARCHAR2(20) PRIMARY KEY,
    ORIGIN_NAME VARCHAR2(255) NOT NULL,
    CHANGE_NAME VARCHAR2(255) NOT NULL
);

ALTER TABLE MEMBER_PROFILE ADD CONSTRAINT MP_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER;

CREATE TABLE BOARD(
    BOARD_NUM NUMBER PRIMARY KEY,
    PARENT_NUM NUMBER DEFAULT NULL,
    GROUP_ORD NUMBER DEFAULT 0 NOT NULL,
    BOARD_LEVEL NUMBER DEFAULT 0 NOT NULL,
    MEMBER_ID VARCHAR2(20) NOT NULL,
    BOARD_TITLE VARCHAR2(300) NOT NULL,
    VIEWS NUMBER DEFAULT 0 NOT NULL,
    BOARD_CONTENT VARCHAR2(4000) NOT NULL,
    CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
    MODIFY_DATE DATE DEFAULT SYSDATE NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);
CREATE SEQUENCE SEQ_BCOUNT NOCACHE;
ALTER TABLE BOARD ADD CONSTRAINT B_PNUM_FK FOREIGN KEY(PARENT_NUM) REFERENCES BOARD(BOARD_NUM);
ALTER TABLE BOARD ADD CONSTRAINT B_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER;

CREATE TABLE BOARD_FILE(
    FILE_ID NUMBER PRIMARY KEY,
    BOARD_NUM NUMBER NOT NULL,
    ORIGIN_NAME VARCHAR2(255) NOT NULL,
    CHANGE_NAME VARCHAR2(255) NOT NULL,
    UPLOAD_DATE DATE DEFAULT SYSDATE NOT NULL,
    DOWNLOAD_COUNT NUMBER DEFAULT 0 NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

CREATE SEQUENCE SEQ_BFCOUNT NOCACHE;
ALTER TABLE BOARD_FILE ADD CONSTRAINT BF_BNUM_FK FOREIGN KEY(BOARD_NUM) REFERENCES BOARD;

CREATE OR REPLACE FUNCTION BFILE_COUNT RETURN NUMBER IS
BEGIN
     RETURN SEQ_BFCOUNT.NEXTVAL;
END;
/

CREATE TABLE BOARD_COMMENT(
    COMMENT_NUM NUMBER PRIMARY KEY,
    COMMENT_GROUP NUMBER DEFAULT NULL,
    GROUP_ORD NUMBER DEFAULT 0 NOT NULL,
    COMMENT_LEVEL NUMBER DEFAULT 0 NOT NULL,
    BOARD_NUM NUMBER NOT NULL,
    MEMBER_ID VARCHAR2(20) NOT NULL,
    COMMENT_CONTENT VARCHAR2(4000) NOT NULL,
    CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
    MODIFY_DATE DATE DEFAULT SYSDATE NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

CREATE SEQUENCE SEQ_BCCOUNT NOCACHE;

ALTER TABLE BOARD_COMMENT ADD CONSTRAINT BC_CG_FK FOREIGN KEY(COMMENT_GROUP) REFERENCES BOARD_COMMENT(COMMENT_NUM);
ALTER TABLE BOARD_COMMENT ADD CONSTRAINT BC_BNUM_FK FOREIGN KEY(BOARD_NUM) REFERENCES BOARD;
ALTER TABLE BOARD_COMMENT ADD CONSTRAINT BC_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER;

CREATE TABLE NOTICE_BOARD(
    NOTICE_NUM NUMBER PRIMARY KEY,
    MEMBER_ID VARCHAR2(20) NOT NULL,
    NOTICE_TITLE VARCHAR2(300) NOT NULL,
    CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
    NOTICE_COUNT NUMBER DEFAULT 0 NOT NULL,
    NOTICE_CONTENT VARCHAR2(4000) NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

CREATE SEQUENCE SEQ_NBCOUNT NOCACHE;
ALTER TABLE NOTICE_BOARD ADD CONSTRAINT NB_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER;

DROP TABLE QNA_BOARD;
DROP SEQUENCE SEQ_QBCOUNT;
CREATE TABLE QNA_BOARD(
    QNA_NUM NUMBER PRIMARY KEY,
    QNA_GROUP NUMBER,
    QNA_ORDER NUMBER NOT NULL,
    QNA_INDENT NUMBER NOT NULL,
    MEMBER_ID VARCHAR2(20) NOT NULL,
    QNA_TITLE VARCHAR2(300) NOT NULL,
    QNA_DATE DATE DEFAULT SYSDATE NOT NULL,
    QNA_CONTENT VARCHAR2(4000) NOT NULL,
    QNA_REPLYCHECK VARCHAR2(1) DEFAULT 'N' NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

CREATE SEQUENCE SEQ_QBCOUNT NOCACHE;
ALTER TABLE QNA_BOARD ADD CONSTRAINT QB_QG_FK FOREIGN KEY(QNA_GROUP) REFERENCES QNA_BOARD(QNA_NUM);
ALTER TABLE QNA_BOARD ADD CONSTRAINT QB_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER;

CREATE TABLE MATCH(
    MATCH_NUM NUMBER PRIMARY KEY,
    MEMBER_ID VARCHAR2(20) NOT NULL,
    MATCH_CATE NUMBER NOT NULL,
    MATCH_TITLE VARCHAR2(300) NOT NULL,
    MATCH_CONTENT VARCHAR2(1000) NOT NULL,
    MATCH_DATE DATE DEFAULT SYSDATE NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

CREATE SEQUENCE SEQ_MCOUNT NOCACHE;
ALTER TABLE MATCH ADD CONSTRAINT MA_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER;

CREATE TABLE MYPET(
    PET_NUM NUMBER PRIMARY KEY,
    MEMBER_ID VARCHAR2(20) NOT NULL,
    PETNAME VARCHAR2(20) NOT NULL,
    PET_TYPE VARCHAR2(40) NOT NULL,
    DOG_CAT_TYPE VARCHAR2(40) NOT NULL,
    GENDER VARCHAR2(1) NOT NULL,
    WEIGHT NUMBER NOT NULL,
    BIRTHYEAR NUMBER NOT NULL,
    PERSONALITY VARCHAR2(300) NOT NULL,
    INFORM VARCHAR2(500) NULL
);

CREATE SEQUENCE SEQ_MPETCOUNT NOCACHE;
ALTER TABLE MYPET ADD CONSTRAINT MPET_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER;

CREATE TABLE MYPET_FILE(
    PET_NUM NUMBER PRIMARY KEY,
    ORIGIN_NAME VARCHAR2(255) NOT NULL,
    CHANGE_NAME VARCHAR2(255) NOT NULL
);

ALTER TABLE MYPET_FILE ADD CONSTRAINT MPF_PNUM_FK FOREIGN KEY(PET_NUM) REFERENCES MYPET ON DELETE CASCADE;

CREATE TABLE MATCH_PET(
    MATCH_NUM NUMBER NOT NULL,
    PET_NUM NUMBER NOT NULL,
    PRIMARY KEY(MATCH_NUM, PET_NUM)
);

ALTER TABLE MATCH_PET ADD CONSTRAINT MAP_MNUM_FK FOREIGN KEY(MATCH_NUM) REFERENCES MATCH;
ALTER TABLE MATCH_PET ADD CONSTRAINT MAP_PNUM_FK FOREIGN KEY(PET_NUM) REFERENCES MYPET;

CREATE TABLE REPORT(
    REPORT_NUM NUMBER PRIMARY KEY,
    MEMBER_ID VARCHAR2(20) NOT NULL,
    MEMBER_ID2 VARCHAR2(20) NOT NULL,
    REPORT_CATE VARCHAR2(20) NOT NULL,
    REPORT_CONTENT VARCHAR2(2000) NOT NULL,
    REPORT_DATE DATE DEFAULT SYSDATE NOT NULL,
    REPORT_PATH VARCHAR2(255) NOT NULL
);

CREATE SEQUENCE SEQ_RCOUNT NOCACHE;
ALTER TABLE REPORT ADD CONSTRAINT R_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER;
ALTER TABLE REPORT ADD CONSTRAINT R_ID2_FK FOREIGN KEY(MEMBER_ID2) REFERENCES MEMBER;

CREATE TABLE MESSAGE(
    MESSAGE_NUM NUMBER PRIMARY KEY,
    MEMBER_ID VARCHAR2(20) NOT NULL,
    SEND_ID VARCHAR2(20) NOT NULL,
    MESSAGE_CONTENT VARCHAR2(4000) NOT NULL,
    SEND_DATE DATE DEFAULT SYSDATE NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'N' NOT NULL
);

CREATE SEQUENCE SEQ_MECOUNT NOCACHE;
ALTER TABLE MESSAGE ADD CONSTRAINT ME_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER;
ALTER TABLE MESSAGE ADD CONSTRAINT ME_SID_FK FOREIGN KEY(SEND_ID) REFERENCES MEMBER;

CREATE TABLE PRODUCT(
    PRODUCT_NUM NUMBER PRIMARY KEY,
    MEMBER_ID VARCHAR2(20) NOT NULL,
    CATEGORY VARCHAR2(30) NOT NULL,
    PRODUCT_NAME VARCHAR2(50) NOT NULL,
    PD_CONTENT VARCHAR2(4000) NOT NULL,
    PD_TITLE VARCHAR2(300) NOT NULL,
    PRICE NUMBER NULL,
    CREATE_DATE DATE DEFAULT SYSDATE,
    SIDO_NAME VARCHAR2(255) NOT NULL,
    SIGUNGU_NAME VARCHAR2(255) NOT NULL,
    DONG_NAME VARCHAR2(255) NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);
CREATE SEQUENCE SEQ_PCOUNT NOCACHE;
ALTER TABLE PRODUCT ADD CONSTRAINT P_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER;

CREATE TABLE PRODUCT_FILE(
    FILE_ID NUMBER PRIMARY KEY,
    PRODUCT_NUM NUMBER NOT NULL,
    ORIGIN_NAME VARCHAR2(255) NOT NULL,
    CHANGE_NAME VARCHAR2(255) NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

CREATE SEQUENCE SEQ_PROFCOUNT NOCACHE;
ALTER TABLE PRODUCT_FILE ADD CONSTRAINT PF_PNUM_FK FOREIGN KEY(PRODUCT_NUM) REFERENCES PRODUCT;

CREATE OR REPLACE FUNCTION SSFILE_COUNT RETURN NUMBER IS
BEGIN
     RETURN SEQ_PROFCOUNT.NEXTVAL;
END;
/


CREATE TABLE PRODUCT_COMMENT(
    COMMENT_NUM NUMBER PRIMARY KEY,
    COMMENT_GROUP NUMBER DEFAULT NULL,
    GROUP_ORD NUMBER DEFAULT 0 NOT NULL,
    COMMENT_LEVEL NUMBER DEFAULT 0 NOT NULL,
    PRODUCT_NUM NUMBER NOT NULL,
    MEMBER_ID VARCHAR2(20) NOT NULL,
    COMMENT_CONTENT VARCHAR2(4000) NOT NULL,
    CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
    MODIFY_DATE DATE DEFAULT SYSDATE NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

CREATE SEQUENCE SEQ_PCCOUNT NOCACHE;

ALTER TABLE PRODUCT_COMMENT ADD CONSTRAINT PC_CG_FK FOREIGN KEY(COMMENT_GROUP) REFERENCES PRODUCT_COMMENT(COMMENT_NUM);
ALTER TABLE PRODUCT_COMMENT ADD CONSTRAINT PC_BNUM_FK FOREIGN KEY(PRODUCT_NUM) REFERENCES PRODUCT;
ALTER TABLE PRODUCT_COMMENT ADD CONSTRAINT PC_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER;

CREATE TABLE LICENSE_QUIZ(
    QUIZ_NUM NUMBER PRIMARY KEY,
    QUIZ_DIFFICULTY NUMBER NOT NULL,
    QUIZ_CATEGORY VARCHAR2(10) NOT NULL,
    QUIZ_CONTENT VARCHAR2(1000) NOT NULL
);

CREATE SEQUENCE SEQ_LQCOUNT NOCACHE;

CREATE TABLE LICENSE_QUIZ_ANS(
    QUIZ_NUM NUMBER NOT NULL,
    QUIZ_CHOICE VARCHAR2(1000) NOT NULL,
    ANS_CHECK VARCHAR2(1) DEFAULT 'N' NOT NULL
);

ALTER TABLE LICENSE_QUIZ_ANS ADD CONSTRAINT L_QNUM_FK FOREIGN KEY(QUIZ_NUM) REFERENCES LICENSE_QUIZ;

CREATE TABLE CATDOG(
    CATDOG_NUM NUMBER PRIMARY KEY,
    CATDOG_TYPE VARCHAR2(100) NOT NULL,
    CATDOG_CATE VARCHAR2(100) NOT NULL,
    VIEWS NUMBER DEFAULT 0 NOT NULL,
    CATDOG_CHARACTER VARCHAR2(4000) NOT NULL,
    PERSONALITY VARCHAR2(4000) NOT NULL,
    MEMBER_ID VARCHAR2(20) NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);
CREATE SEQUENCE SEQ_PETCOUNT NOCACHE;


CREATE TABLE CATDOG_FILE(
    FILE_ID NUMBER PRIMARY KEY,
    CATDOG_NUM NUMBER NOT NULL,
    ORIGIN_NAME VARCHAR2(255) NOT NULL,
    CHANGE_NAME VARCHAR2(255) NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

CREATE SEQUENCE SEQ_PFCOUNT NOCACHE;
CREATE OR REPLACE FUNCTION PFILE_COUNT RETURN NUMBER IS
BEGIN
     RETURN SEQ_PFCOUNT.NEXTVAL;
END;
/


CREATE TABLE OPERATION_GUIDE(   
    OP_NUM NUMBER PRIMARY KEY, 
    MEMBER_ID VARCHAR2(20 BYTE) NOT NULL, 
    OP_TITLE VARCHAR2(300 BYTE) NOT NULL, 
    OP_CONTENT VARCHAR2(4000 BYTE) NOT NULL, 
    CREATE_DATE DATE DEFAULT SYSDATE NOT NULL, 
    MODIFY_DATE DATE DEFAULT SYSDATE NOT NULL, 
    STATUS VARCHAR2(1 BYTE) DEFAULT 'Y' NOT NULL
);

CREATE SEQUENCE SEQ_OGCOUNT NOCACHE;


CREATE TABLE MATCH_CHATLOG(
    MATCH_NUM NUMBER NOT NULL,
    MEMBER_ID VARCHAR2(20) NOT NULL,
    CHAT_CONTENT VARCHAR2(100),
    CHAT_DATE DATE DEFAULT SYSDATE NOT NULL
);

ALTER TABLE MATCH_CHATLOG ADD CONSTRAINT MCL_MNUM_FK FOREIGN KEY(MATCH_NUM) REFERENCES MATCH;
ALTER TABLE MATCH_CHATLOG ADD CONSTRAINT MCL_ID_FK FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER;